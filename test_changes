#!/bin/bash
## @license AGPLv3 <https://www.gnu.org/licenses/agpl-3.0.html>
## @author Copyright (C) 2015 Robin Schneider <ypid@riseup.net>
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU Affero General Public License as
## published by the Free Software Foundation, version 3 of the
## License.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Affero General Public License for more details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this program.  If not, see <https://www.gnu.org/licenses/>.

latest_upstream_master_commit_hash="$(curl https://api.github.com/repos/ypid/taginfo-projects_travis/git/refs/heads/master | jq --raw-output '.object.sha')"
# latest_upstream_master_commit_hash="8a895fa5d1808b7927c20ccc29978b2d5a13073c"

exit_code=0

## Check if sorted {{{
sort --unique project_list.txt > project_list_sorted.txt
git diff --color-words --no-index project_list.txt project_list_sorted.txt
if [ $? == 0 ]
then
    echo "project_list.txt is sorted"
else
    echo "project_list.txt not is sorted" 1>&2
    echo "You might want to run:" 1>&2
    echo "    cp project_list_sorted.txt project_list.txt" 1>&2
    exit_code=$((exit_code+1))
fi
## }}}

git diff "${latest_upstream_master_commit_hash}..HEAD" --color=always -- project_list.txt \
    | perl -wlne 'print $1 if /^\e\[32m\+\e\[m\e\[32m(.*)\e\[m$/' > project_list_diff.txt

while read id url
do
    echo "- Testing $id: $url"
    if [[ $id =~ ^[a-z_]+$ ]]
    then
        echo "-- ID is vaild"
    else
        echo "-- ID is not valid" 1>&2
        exit_code=$((exit_code+1))
    fi
    ## Ensure that the output files does not yet exist.
    tempdir="$(mktemp --directory)"
    curl "$url" --output "$tempdir/taginfo.json"
    if [ $? == 0 ]
    then
        echo "-- taginfo.json can be retrieved"
        jq '.' "$tempdir/taginfo.json"
        if [ $? == 0 ]
        then
            echo "taginfo.json can be retrieved and is valid JSON"
        else
            echo "Problem with the taginfo.json file." 1>&2
            exit_code=$((exit_code+1))
        fi
    else
        echo "-- taginfo.json file can not be retrieved." 1>&2
        exit_code=$((exit_code+1))
    fi
done < project_list_diff.txt

echo "Problem count: $exit_code"

exit "$exit_code"
